//Entradas decodificador
int A = 22;
int B = 23;
int C = 24;
int D = 25;

// Variables para Multiplexar Displays
int decenas, unidades;
int dec = 30;
int uni = 31;

// Switchs para los sensores
int emisor1 = 32;
int emisor2 = 33;
int switch1 = 34;
int switch2 = 35;

//Contador
int cuenta = 0;

// En el setup establecemos los parámetros iniciales.
void setup() {
  pinMode(switch1, INPUT); // El switch 1 será entrada. Receptor IR.
  pinMode(switch2, INPUT); // El switch 2 será entrada. Receptor IR.
  pinMode (emisor1, OUTPUT);
  pinMode (emisor2, OUTPUT);
  pinMode (A, OUTPUT);
  pinMode (B, OUTPUT);
  pinMode (C, OUTPUT);
  pinMode (D, OUTPUT);
  pinMode (dec, OUTPUT);
  pinMode (uni, OUTPUT);
  pinMode (38, OUTPUT);
  pinMode (40, OUTPUT);

  digitalWrite(emisor1, HIGH);   // Encendido inicial del emisor 1.
  digitalWrite(emisor2, HIGH);   // Encendido inicial del emisor 2.

}

void loop() {
  // CONTADOR PARA LAS PERSONAS QUE ENTRAN
  if (digitalRead(switch1) == LOW && digitalRead(switch2) == HIGH) {
    digitalWrite(emisor1, LOW);
     digitalWrite (38, HIGH);
     digitalWrite (40, LOW);
      delay(50);
    while (digitalRead(switch1) == LOW && digitalRead(switch2) == HIGH) { //Condicion para evitar activacion si no se completa el trayecto de ida.
      digitalWrite(emisor1, LOW);
      
    }

    delay(400);
    if (cuenta < 50) {

      cuenta++;
    }
    
  }

  // CONTADOR PARA LAS PERSONAS QUE SALEN
  if (digitalRead(switch1) == HIGH && digitalRead(switch2) == LOW) {
    digitalWrite(emisor2, LOW);
      digitalWrite (40, HIGH);
      digitalWrite (38, LOW);
      delay(50);
    while (digitalRead(switch2) == LOW && digitalRead(switch1) == HIGH) { //Condicion para evitar activacion si no se completa el trayecto de vuelta.
      digitalWrite(emisor2, LOW);
      
    }

    delay(400);
    if (cuenta > 0 && cuenta < 50) { // Condicion para contar unicamente entre 0 y 99
      cuenta--;
      
    }
  }

  digitalWrite(emisor1, HIGH);   // Reinicio del emisor 1 a su estado natural.
  digitalWrite(emisor2, HIGH);   // Reinicio del emisor 2 a su estado natural.

  decenas = cuenta / 10;
  unidades = cuenta - decenas * 10;
  digitalWrite(dec, HIGH);
  digitalWrite(uni, LOW);
  contador(decenas);
  delay(10);
  digitalWrite(dec, LOW);
  digitalWrite(uni, HIGH);
  contador(unidades);
  delay(10);

}

void contador (int dato) {
  switch (dato) {
    case 0:
      digitalWrite(A, LOW);
      digitalWrite(B, LOW);
      digitalWrite(C, LOW);
      digitalWrite(D, LOW);
      break;

    case 1:
      digitalWrite(A, HIGH);
      digitalWrite(B, LOW);
      digitalWrite(C, LOW);
      digitalWrite(D, LOW);
      break;

    case 2:
      digitalWrite(A, LOW);
      digitalWrite(B, HIGH);
      digitalWrite(C, LOW);
      digitalWrite(D, LOW);
      break;

    case 3:
      digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      digitalWrite(C, LOW);
      digitalWrite(D, LOW);
      break;

    case 4:
      digitalWrite(A, LOW);
      digitalWrite(B, LOW);
      digitalWrite(C, HIGH);
      digitalWrite(D, LOW);
      break;

    case 5:
      digitalWrite(A, HIGH);
      digitalWrite(B, LOW);
      digitalWrite(C, HIGH);
      digitalWrite(D, LOW);
      break;

    case 6:
      digitalWrite(A, LOW);
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(D, LOW);
      break;

    case 7:
      digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(D, LOW);
      break;

    case 8:
      digitalWrite(A, LOW);
      digitalWrite(B, LOW);
      digitalWrite(C, LOW);
      digitalWrite(D, HIGH);
      break;

    case 9:
      digitalWrite(A, HIGH);
      digitalWrite(B, LOW);
      digitalWrite(C, LOW);
      digitalWrite(D, HIGH);
      break;
  }
}
